{"version":3,"file":"index.js","sources":["../src/js/mobile-menu.js","../src/js/apiService.js","../src/js/modal-artists.js","../src/js/artists.js","../src/js/feedback.js"],"sourcesContent":["//---header-section---\ndocument.addEventListener('DOMContentLoaded', function () {\n  const burger = document.querySelector('.burger-btn');\n  const modalMenu = document.querySelector('.mobile-menu');\n  const closeBtn = document.querySelector('.mobile-close');\n  const backdrop = document.querySelector('.mobile-backdrop');\n  const headerLogo = document.querySelector('.header-logo-link');\n\n  let logoCloned = false;\n\n  const closeMenu = () => {\n    backdrop.classList.remove('open');\n    modalMenu.classList.remove('open');\n    document.body.style.overflow = '';\n  };\n\n  burger.addEventListener('click', () => {\n    backdrop.classList.add('open');\n    modalMenu.classList.add('open');\n    document.body.style.overflow = 'hidden';\n\n    if (!logoCloned && headerLogo) {\n      const logoClone = headerLogo.cloneNode(true);\n      logoClone.classList.add('mobile-logo');\n      modalMenu.prepend(logoClone);\n      logoCloned = true;\n    }\n  });\n\n  closeBtn.addEventListener('click', closeMenu);\n\n  backdrop.addEventListener('click', e => {\n    if (e.target === backdrop) closeMenu();\n  });\n\n  const mobileLinks = modalMenu.querySelectorAll('a');\n  mobileLinks.forEach(link => {\n    link.addEventListener('click', closeMenu);\n  });\n});\n","// // apiService.js\n// import axios from 'axios';\n\n// const API_BASE_URL = 'https://sound-wave.b.goit.study/api';\n\n// /**\n//  * Fetches a list of genres.\n//  * @returns {Promise<Array>} A promise that resolves to an array of genre objects.\n//  */\n// export async function fetchGenres() {\n//   try {\n//     const response = await axios.get(`${API_BASE_URL}/genres`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching genre list:', error);\n//     throw error;\n//   }\n// }\n\n// /**\n//  * Fetches a list of artists with pagination.\n//  * @param {number} limit The number of artists to fetch per page.\n//  * @param {number} page The page number to fetch.\n//  * @returns {Promise<Object>} A promise that resolves to an object containing artists, totalArtists, page, and limit.\n//  */\n// export async function fetchArtists(limit = 10, page = 1) {\n//   // <-- ГЭТА ФУНКЦЫЯ ПАВІННА БЫЦЬ ТУТ БЕЗ ЗМЕН\n//   try {\n//     const response = await axios.get(`${API_BASE_URL}/artists`, {\n//       params: { limit, page },\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching artist list:', error);\n//     throw error;\n//   }\n// }\n\n// /**\n//  * Fetches artist information and their albums by ID.\n//  * @param {string} artistId The ID of the artist.\n//  * @returns {Promise<Object>} A promise that resolves to an object containing artist details and albums.\n//  */\n// export async function fetchArtistDetailsWithAlbums(artistId) {\n//   try {\n//     const response = await axios.get(\n//       `${API_BASE_URL}/artists/${artistId}/albums`\n//     );\n//     return response.data;\n//   } catch (error) {\n//     console.error(\n//       `Error fetching artist details with albums (ID: ${artistId}):`,\n//       error\n//     );\n//     throw error;\n//   }\n// }\n\n// /**\n//  * Fetches comprehensive artist details, including tracks, by ID.\n//  * This is the primary function for fetching all artist-related data for the modal.\n//  * @param {string} artistId The ID of the artist.\n//  * @returns {Promise<Object>} A promise that resolves to an object containing artist details and tracksList.\n//  */\n// export async function fetchArtistDetails(artistId) {\n//   // <-- ГЭТА ПЕРАЙМЕНАВАНАЯ ФУНКЦЫЯ\n//   try {\n//     const response = await axios.get(`${API_BASE_URL}/artists/${artistId}`);\n//     return response.data;\n//   } catch (error) {\n//     console.error(`Error fetching artist details (ID: ${artistId}):`, error);\n//     throw error;\n//   }\n// }\n\n// /**\n//  * Submits a new feedback.\n//  * @param {Object} feedbackData - Object containing feedback data.\n//  * @param {string} feedbackData.name - User's name.\n//  * @param {number} feedbackData.rating - Rating (e.g., from 1 to 5).\n//  * @param {string} feedbackData.descr - Description/comment.\n//  * @returns {Promise<Object>} A promise that resolves to an object with a processing message.\n//  */\n// export async function submitFeedback(feedbackData) {\n//   try {\n//     const response = await axios.post(\n//       `${API_BASE_URL}/feedbacks`,\n//       feedbackData\n//     );\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error submitting feedback:', error);\n//     throw error;\n//   }\n// }\n\n// /**\n//  * Fetches a list of feedbacks with pagination.\n//  * @param {number} limit - The number of feedbacks per page.\n//  * @param {number} page - The page number.\n//  * @returns {Promise<Object>} A promise that resolves to an object containing an array of feedbacks, total count, and pagination info.\n//  */\n// export async function fetchFeedbacks(limit = 10, page = 1) {\n//   try {\n//     const response = await axios.get(`${API_BASE_URL}/feedbacks`, {\n//       params: { limit, page },\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching feedback list:', error);\n//     throw error;\n//   }\n// }\n\n// /**\n//  * Registers a new user.\n//  * @param {Object} userData - User registration data.\n//  * @param {string} userData.email - User's email address.\n//  * @param {string} userData.password - User's password.\n//  * @returns {Promise<Object>} A promise that resolves to an object with an API key.\n//  */\n// export async function registerUser(userData) {\n//   try {\n//     const response = await axios.post(`${API_BASE_URL}/register`, userData);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error registering user:', error);\n//     throw error;\n//   }\n// }\n\n// /**\n//  * Logs in a user.\n//  * @param {Object} credentials - User login credentials.\n//  * @param {string} credentials.email - User's email address.\n//  * @param {string} credentials.password - User's password.\n//  * @returns {Promise<Object>} A promise that resolves to an object with an API key.\n//  */\n// export async function loginUser(credentials) {\n//   try {\n//     const response = await axios.post(`${API_BASE_URL}/login`, credentials);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error logging in user:', error);\n//     throw error;\n//   }\n// }\n\n\nimport axios from 'axios';\nconst API_BASE_URL = 'https://sound-wave.b.goit.study/api';\n/**\n * Fetches a list of genres.\n * @returns {Promise<Array>} A promise that resolves to an array of genre objects.\n */\nexport async function fetchGenres() {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/genres`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching genre list:', error);\n    throw error;\n  }\n}\n/**\n * Fetches a list of artists with pagination.\n * @param {number} limit The number of artists to fetch per page.\n * @param {number} page The page number to fetch.\n * @returns {Promise<Object>} A promise that resolves to an object containing artists, totalArtists, page, and limit.\n */\nexport async function fetchArtists(limit = 10, page = 1) {\n  // <-- ГЭТА ФУНКЦЫЯ ПАВІННА БЫЦЬ ТУТ БЕЗ ЗМЕН\n  try {\n    const response = await axios.get(`${API_BASE_URL}/artists`, {\n      params: { limit, page },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching artist list:', error);\n    throw error;\n  }\n}\n/**\n * Fetches artist information and their albums by ID.\n * @param {string} artistId The ID of the artist.\n * @returns {Promise<Object>} A promise that resolves to an object containing artist details and albums.\n */\nexport async function fetchArtistDetailsWithAlbums(artistId) {\n  try {\n    const response = await axios.get(\n      `${API_BASE_URL}/artists/${artistId}/albums`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\n      `Error fetching artist details with albums (ID: ${artistId}):`,\n      error\n    );\n    throw error;\n  }\n}\n/**\n * Fetches comprehensive artist details, including tracks, by ID.\n * This is the primary function for fetching all artist-related data for the modal.\n * @param {string} artistId The ID of the artist.\n * @returns {Promise<Object>} A promise that resolves to an object containing artist details and tracksList.\n */\nexport async function fetchArtistDetails(artistId) {\n  // <-- ГЭТА ПЕРАЙМЕНАВАНАЯ ФУНКЦЫЯ\n  try {\n    const response = await axios.get(`${API_BASE_URL}/artists/${artistId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching artist details (ID: ${artistId}):`, error);\n    throw error;\n  }\n}\n/**\n * Submits a new feedback.\n * @param {Object} feedbackData - Object containing feedback data.\n * @param {string} feedbackData.name - User's name.\n * @param {number} feedbackData.rating - Rating (e.g., from 1 to 5).\n * @param {string} feedbackData.descr - Description/comment.\n * @returns {Promise<Object>} A promise that resolves to an object with a processing message.\n */\nexport async function submitFeedback(feedbackData) {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/feedbacks`,\n      feedbackData\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error submitting feedback:', error);\n    throw error;\n  }\n}\n/**\n * Fetches a list of feedbacks with pagination.\n * @param {number} limit - The number of feedbacks per page.\n * @param {number} page - The page number.\n * @returns {Promise<Object>} A promise that resolves to an object containing an array of feedbacks, total count, and pagination info.\n */\nexport async function fetchFeedbacks(limit = 10, page = 1) {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/feedbacks`, {\n      params: { limit, page },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching feedback list:', error);\n    throw error;\n  }\n}\n/**\n * Registers a new user.\n * @param {Object} userData - User registration data.\n * @param {string} userData.email - User's email address.\n * @param {string} userData.password - User's password.\n * @returns {Promise<Object>} A promise that resolves to an object with an API key.\n */\nexport async function registerUser(userData) {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/register`, userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n}\n/**\n * Logs in a user.\n * @param {Object} credentials - User login credentials.\n * @param {string} credentials.email - User's email address.\n * @param {string} credentials.password - User's password.\n * @returns {Promise<Object>} A promise that resolves to an object with an API key.\n */\nexport async function loginUser(credentials) {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login`, credentials);\n    return response.data;\n  } catch (error) {\n    console.error('Error logging in user:', error);\n    throw error;\n  }\n}","import { fetchArtistDetails } from './apiService.js';\n\nconst artistModal = document.getElementById('artistModal');\nconst closeModalButton = artistModal?.querySelector('.close-modal');\nconst modalLoader = document.getElementById('modalLoader');\n\nconst modalArtistImage = artistModal?.querySelector('#modal-artist-image');\nconst modalTitle = artistModal?.querySelector('.modal-title');\n\nconst artistInfoList = artistModal?.querySelector('.artist-info-list');\nconst artistBioParagraph = artistModal?.querySelector('.artist-info-bio-text');\nconst readMoreBioBtn = artistModal?.querySelector('#read-more-bio-btn');\nconst genresList = artistModal?.querySelector('.genres-list');\nconst artistAlbumsListContainer = artistModal?.querySelector(\n  '.artist-albums-list'\n);\nconst artistAlbumsBlock = artistModal?.querySelector('.artist-albums-block');\n\nlet allAlbums = [];\nlet currentAlbumPage = 1;\nconst albumsPerPage = 8;\n\nfunction clearModalContent() {\n  if (modalTitle) modalTitle.textContent = 'Artist Name';\n  if (modalArtistImage) {\n    modalArtistImage.src = '';\n    modalArtistImage.alt = '';\n  }\n  if (artistInfoList) artistInfoList.innerHTML = '';\n  if (artistBioParagraph) artistBioParagraph.innerHTML = '';\n  if (genresList) genresList.innerHTML = '';\n  if (artistAlbumsListContainer) artistAlbumsListContainer.innerHTML = '';\n\n  if (modalLoader) modalLoader.style.display = 'none';\n\n  const existingPaginationControls = artistModal?.querySelector(\n    '.pagination-controls'\n  );\n  if (existingPaginationControls) {\n    existingPaginationControls.remove();\n  }\n\n  if (readMoreBioBtn) {\n    readMoreBioBtn.style.display = 'none';\n    readMoreBioBtn.textContent = 'Read More';\n    if (artistBioParagraph) artistBioParagraph.classList.remove('expanded');\n    readMoreBioBtn.removeEventListener('click', toggleBiography);\n  }\n\n  allAlbums = [];\n  currentAlbumPage = 1;\n}\n\nfunction closeArtistModal() {\n  if (artistModal) {\n    artistModal.classList.remove('open');\n  }\n  if (document.body) {\n    document.body.classList.remove('modal-open');\n  }\n  clearModalContent();\n  document.removeEventListener('keydown', escapeKeyHandler);\n  artistModal?.removeEventListener('click', outsideClickHandler);\n}\n\nfunction outsideClickHandler(e) {\n  if (e.target === artistModal) {\n    closeArtistModal();\n  }\n}\n\nfunction escapeKeyHandler(e) {\n  if (e.key === 'Escape') {\n    closeArtistModal();\n  }\n}\n\nfunction renderAlbums(page) {\n  if (!artistAlbumsListContainer) return;\n\n  const startIndex = (page - 1) * albumsPerPage;\n  const endIndex = startIndex + albumsPerPage;\n  const albumsToDisplay = allAlbums.slice(startIndex, endIndex);\n\n  artistAlbumsListContainer.innerHTML = '';\n\n  if (albumsToDisplay.length === 0) {\n    artistAlbumsListContainer.innerHTML = `<li class=\"artist-albums-item\"><p>No album information available.</p></li>`;\n    const existingPaginationControls = artistModal?.querySelector(\n      '.pagination-controls'\n    );\n    if (existingPaginationControls) {\n      existingPaginationControls.remove();\n    }\n    return;\n  }\n\n  albumsToDisplay.forEach(album => {\n    let albumItemHtml = `<li class=\"artist-albums-item\">\n                            <h3>${album.strAlbum || 'Album Title'} (${\n      album.intYearReleased || 'Year'\n    })</h3>\n                            <ul class=\"album-track-list\">`;\n\n    albumItemHtml += `<li class=\"album-track-item track-header\">\n                            <ul class=\"track-info-list\">\n                                <li class=\"track-info-item\">Track</li>\n                                <li class=\"track-info-item track-info-item-time\">Time</li>\n                                <li class=\"track-info-item track-info-item-link\">Link</li>\n                            </ul>\n                        </li>`;\n\n    if (album.tracks && album.tracks.length > 0) {\n      album.tracks.forEach((track, index) => {\n        const rowClass = index % 2 === 0 ? 'even-row' : 'odd-row';\n        albumItemHtml += `<li class=\"album-track-item ${rowClass}\">\n                            <ul class=\"track-info-list\">\n                                <li class=\"track-info-item\">${\n                                  track.strTrack || 'Track Name'\n                                }</li>\n                                <li class=\"track-info-item track-info-item-time\">${\n                                  track.intDuration\n                                    ? formatDuration(track.intDuration)\n                                    : '-'\n                                }</li>\n                                <li class=\"track-info-item track-info-item-link\">`;\n        if (\n          track.movie &&\n          typeof track.movie === 'string' &&\n          track.movie !== 'null' &&\n          (track.movie.startsWith('http://') ||\n            track.movie.startsWith('https://'))\n        ) {\n          albumItemHtml += `<button class=\"yt-button\" data-url=\"${track.movie}\" aria-label=\"Watch on YouTube\">\n                                <svg class=\"yt-icon\" width=\"20\" height=\"20\">\n                                  <use href=\"./img/sprite.svg#icon-youtube\"></use>\n                                </svg>\n                            </button>`;\n        } else {\n          albumItemHtml += `-`;\n        }\n        albumItemHtml += `</li>\n                            </ul>\n                        </li>`;\n      });\n    } else {\n      albumItemHtml += `<li class=\"album-track-item\"><p>No tracks available for this album.</p></li>`;\n    }\n    albumItemHtml += `</ul></li>`;\n    artistAlbumsListContainer.insertAdjacentHTML('beforeend', albumItemHtml);\n  });\n\n  const totalPages = Math.ceil(allAlbums.length / albumsPerPage);\n\n  const existingPaginationControls = artistModal?.querySelector(\n    '.pagination-controls'\n  );\n  if (existingPaginationControls) {\n    existingPaginationControls.remove();\n  }\n\n  if (totalPages > 1) {\n    const paginationControls = document.createElement('div');\n    paginationControls.className = 'pagination-controls';\n\n    const prevButton = document.createElement('button');\n    prevButton.textContent = 'Previous';\n    prevButton.disabled = page === 1;\n    prevButton.addEventListener('click', () => {\n      currentAlbumPage--;\n      renderAlbums(currentAlbumPage);\n    });\n\n    const nextButton = document.createElement('button');\n    nextButton.textContent = 'Next';\n    nextButton.disabled = page === totalPages;\n    nextButton.addEventListener('click', () => {\n      currentAlbumPage++;\n      renderAlbums(currentAlbumPage);\n    });\n\n    const pageInfo = document.createElement('span');\n    pageInfo.textContent = ` ${page} / ${totalPages} `;\n\n    paginationControls.appendChild(prevButton);\n    paginationControls.appendChild(pageInfo);\n    paginationControls.appendChild(nextButton);\n\n    if (artistAlbumsBlock) {\n      artistAlbumsBlock.appendChild(paginationControls);\n    } else if (artistModal) {\n      artistModal.appendChild(paginationControls);\n    }\n  }\n\n  const ytButtons = artistAlbumsListContainer?.querySelectorAll('.yt-button');\n  ytButtons?.forEach(btn => {\n    btn.addEventListener('click', function (e) {\n      const url = e.currentTarget.dataset.url;\n      if (url) {\n        window.open(url, '_blank');\n      }\n    });\n  });\n}\n\nfunction formatDuration(ms) {\n  const numMs = typeof ms === 'string' ? parseInt(ms, 10) : ms;\n\n  if (typeof numMs !== 'number' || isNaN(numMs) || numMs < 0) {\n    return 'N/A';\n  }\n  const totalSeconds = Math.floor(numMs / 1000);\n  const minutes = Math.floor(totalSeconds / 60);\n  const seconds = totalSeconds % 60;\n  return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n}\n\nfunction toggleBiography() {\n  if (artistBioParagraph && readMoreBioBtn) {\n    artistBioParagraph.classList.toggle('expanded');\n    readMoreBioBtn.textContent = artistBioParagraph.classList.contains(\n      'expanded'\n    )\n      ? 'Read Less'\n      : 'Read More';\n  }\n}\n\nexport async function openArtistModal(artistData) {\n  const requiredElements = [\n    artistModal,\n    modalLoader,\n    modalTitle,\n    modalArtistImage,\n    artistInfoList,\n    artistBioParagraph,\n    genresList,\n    artistAlbumsListContainer,\n  ];\n  if (requiredElements.some(el => !el)) {\n    console.error(\n      'One or more modal DOM elements not found. Check your HTML IDs and classes.'\n    );\n    return;\n  }\n\n  document.body.classList.add('modal-open');\n  artistModal.classList.add('open');\n  modalLoader.style.display = 'block';\n\n  clearModalContent();\n\n  document.addEventListener('keydown', escapeKeyHandler);\n  artistModal?.addEventListener('click', outsideClickHandler);\n  closeModalButton?.addEventListener('click', closeArtistModal);\n  let fullArtistDetailsFromApi;\n  let artistIdToFetch;\n  let genresFromCache = [];\n\n  if (typeof artistData === 'object' && artistData !== null) {\n    artistIdToFetch = artistData._id;\n    if (Array.isArray(artistData.genres) && artistData.genres.length > 0) {\n      genresFromCache = artistData.genres;\n    } else if (\n      typeof artistData.strGenre === 'string' &&\n      artistData.strGenre.trim() !== ''\n    ) {\n      genresFromCache = artistData.strGenre\n        .split(';')\n        .map(genre => genre.trim())\n        .filter(genre => genre !== '');\n    }\n  } else {\n    artistIdToFetch = artistData;\n  }\n\n  if (!artistIdToFetch) {\n    console.error('Artist ID is missing for modal.');\n    modalLoader.style.display = 'none';\n    if (modalTitle) modalTitle.textContent = 'Error: Artist ID missing';\n    return;\n  }\n\n  try {\n    fullArtistDetailsFromApi = await fetchArtistDetails(artistIdToFetch);\n\n    const finalArtistDetails = { ...fullArtistDetailsFromApi };\n\n    if (genresFromCache.length > 0) {\n      finalArtistDetails.genres = genresFromCache;\n    } else {\n      finalArtistDetails.genres = [];\n    }\n\n    modalLoader.style.display = 'none';\n\n    if (finalArtistDetails) {\n      modalTitle.textContent = finalArtistDetails.strArtist || 'Unknown Artist';\n      modalArtistImage.src =\n        finalArtistDetails.strArtistFanart ||\n        finalArtistDetails.strArtistThumb ||\n        finalArtistDetails.image ||\n        'https://via.placeholder.com/250x250.png?text=No+Image';\n      modalArtistImage.alt = finalArtistDetails.strArtist || 'Artist Photo';\n\n      if (artistInfoList) {\n        const formedYear = finalArtistDetails.intFormedYear;\n        const disbandedYear = finalArtistDetails.intDiedYear;\n\n        let yearsActive = 'information unavailable';\n        if (formedYear) {\n          if (\n            disbandedYear &&\n            disbandedYear !== '0000' &&\n            disbandedYear !== null\n          ) {\n            yearsActive = `${formedYear} - ${disbandedYear}`;\n          } else {\n            yearsActive = `${formedYear} - present`;\n          }\n        }\n\n        artistInfoList.innerHTML = `\n          <li class=\"artist-info-item\">\n            <h3>Years Active</h3>\n            <p class=\"artist-info\">${yearsActive}</p>\n          </li>\n          <li class=\"artist-info-item\">\n            <h3>Gender</h3>\n            <p class=\"artist-info\">${\n              finalArtistDetails.strGender || 'information unavailable'\n            }</p>\n          </li>\n          <li class=\"artist-info-item\">\n            <h3>Members</h3>\n            <p class=\"artist-info\">${\n              finalArtistDetails.intMembers || 'information unavailable'\n            }</p>\n          </li>\n          <li class=\"artist-info-item\">\n            <h3>Country</h3>\n            <p class=\"artist-info\">${\n              finalArtistDetails.strCountry || 'information unavailable'\n            }</p>\n          </li>\n        `;\n      }\n\n      if (artistBioParagraph) {\n        const biographyText =\n          finalArtistDetails.strBiographyEN || 'Biography unavailable.';\n        artistBioParagraph.textContent = biographyText;\n\n        if (biographyText.length > 300) {\n          artistBioParagraph.classList.add('collapsed');\n          if (readMoreBioBtn) {\n            readMoreBioBtn.style.display = 'block';\n            readMoreBioBtn.textContent = 'Read More';\n            readMoreBioBtn.addEventListener('click', toggleBiography);\n          }\n        } else {\n          artistBioParagraph.classList.remove('collapsed');\n          if (readMoreBioBtn) {\n            readMoreBioBtn.style.display = 'none';\n            readMoreBioBtn.removeEventListener('click', toggleBiography);\n          }\n        }\n      }\n\n      if (genresList) {\n        genresList.innerHTML = '';\n        let displayGenres = finalArtistDetails.genres || [];\n\n        if (displayGenres.length > 0) {\n          displayGenres.forEach(genre => {\n            const li = document.createElement('li');\n            li.className = 'genres-item';\n            li.textContent = genre;\n            genresList.appendChild(li);\n          });\n        } else {\n          const li = document.createElement('li');\n          li.className = 'genres-item';\n          li.textContent = 'Genres unavailable';\n          genresList.appendChild(li);\n        }\n      }\n\n      if (\n        finalArtistDetails.tracksList &&\n        finalArtistDetails.tracksList.length > 0\n      ) {\n        const albumsMap = new Map();\n        finalArtistDetails.tracksList.forEach(track => {\n          const albumName = track.strAlbum || 'Unknown Album';\n          const albumId = track.idAlbum || albumName;\n\n          if (!albumsMap.has(albumId)) {\n            albumsMap.set(albumId, {\n              strAlbum: albumName,\n              intYearReleased: track.intYearReleased || 'Unknown',\n              idAlbum: albumId,\n              tracks: [],\n            });\n          }\n          albumsMap.get(albumId).tracks.push(track);\n        });\n\n        allAlbums = Array.from(albumsMap.values()).sort((a, b) => {\n          const yearA = parseInt(a.intYearReleased) || 0;\n          const yearB = parseInt(b.intYearReleased) || 0;\n          return yearB - yearA;\n        });\n\n        renderAlbums(currentAlbumPage);\n      } else {\n        if (artistAlbumsListContainer) {\n          artistAlbumsListContainer.innerHTML = `<li class=\"artist-albums-item\"><p>Album and track information unavailable.</p></li>`;\n        }\n        const existingPaginationControls = artistModal?.querySelector(\n          '.pagination-controls'\n        );\n        if (existingPaginationControls) {\n          existingPaginationControls.remove();\n        }\n      }\n    } else {\n      if (modalTitle) modalTitle.textContent = 'Artist Not Found';\n      if (artistInfoList)\n        artistInfoList.innerHTML =\n          '<li class=\"artist-info-item\"><p>Could not retrieve artist details.</p></li>';\n      if (artistBioParagraph) artistBioParagraph.innerHTML = '';\n      if (genresList) genresList.innerHTML = '';\n      if (artistAlbumsListContainer) artistAlbumsListContainer.innerHTML = '';\n    }\n  } catch (error) {\n    modalLoader.style.display = 'none';\n    if (artistModal) {\n      if (modalTitle) modalTitle.textContent = 'Error loading data!';\n      let errorMessage = 'Unfortunately, artist data could not be loaded. ';\n      if (error.response) {\n        errorMessage += `Status: ${error.response.status}. `;\n        if (error.response.status === 404) {\n          errorMessage +=\n            'Resource not found at the specified URL. Incorrect ID or API path. Try a different ID or check API documentation.';\n        } else if (error.response.data && error.response.data.message) {\n          errorMessage += `Message: ${error.response.data.message}`;\n        }\n      } else if (error.request) {\n        errorMessage += 'No response received from the server. Network issue.';\n      } else {\n        errorMessage += `Message: ${error.message}`;\n      }\n\n      if (artistInfoList)\n        artistInfoList.innerHTML = `<li class=\"artist-info-item\"><p class=\"error\">${errorMessage}</p></li>`;\n      if (artistBioParagraph) artistBioParagraph.innerHTML = '';\n      if (genresList) genresList.innerHTML = '';\n      if (artistAlbumsListContainer) artistAlbumsListContainer.innerHTML = '';\n    }\n    console.error('Error fetching data:', error);\n  }\n}\n","// src/js/artists.js\n\n//!==============================================================\n\nimport { fetchArtists as fetchArtistsFromApi } from './apiService.js';\nimport { openArtistModal } from './modal-artists.js';\n// =================================================================\n// 1. DOM Element Caching\n// =================================================================\nconst artistsList = document.getElementById('artists-list');\nconst loadMoreBtn = document.getElementById('load-more');\nconst globalLoader = document.getElementById('global-loader');\n// =================================================================\n// 2. State Variables\n// =================================================================\nlet currentPage = 1;\nconst limit = 8; // Number of items per page\nlet buffer = []; // Buffer for artists waiting to be rendered\nlet isFetching = false; // Flag indicating if an API request is in progress\nlet artistsCache = new Map(); // Cache to store all loaded artist objects by ID\n// =================================================================\n// 3. Data Fetching Functions\n// =================================================================\n/**\n * Asynchronously fetches a list of artists.\n * @param {number} page - The page number to load.\n */\nasync function fetchArtists(page = 1) {\n  showGlobalLoader();\n  isFetching = true;\n  try {\n    const data = await fetchArtistsFromApi(limit, page);\n    const artists = data.artists || [];\n    const total = data.totalArtists || 0;\n    // Add new artists to the buffer and update the cache\n    artists.forEach(artist => {\n      buffer.push(artist);\n      // Use _id, idArtist, or id as unique key, prioritizing what API typically returns\n      const artistId = artist._id || artist.idArtist || artist.id;\n      if (artistId) {\n        artistsCache.set(artistId, artist);\n      }\n    });\n    renderFromBuffer();\n    const shownCount = document.querySelectorAll('.artist-card').length;\n    if (shownCount >= total && buffer.length === 0) {\n      loadMoreBtn.classList.add('hidden');\n    } else {\n      loadMoreBtn.classList.remove('hidden');\n    }\n  } catch (error) {\n    console.error('Error fetching artists:', error);\n    if (artistsList) {\n      artistsList.innerHTML =\n        '<li class=\"artist-card\"><p>Failed to load artists. Please try again later.</p></li>';\n    }\n    if (loadMoreBtn) {\n      loadMoreBtn.classList.add('hidden');\n    }\n  } finally {\n    hideGlobalLoader();\n    isFetching = false;\n  }\n}\n/**\n * Renders artist cards from the buffer into the DOM.\n */\nfunction renderFromBuffer() {\n  const itemsToShow = buffer.splice(0, limit);\n  const fragment = document.createDocumentFragment();\n  itemsToShow.forEach(artist => {\n    const card = document.createElement('li');\n    card.classList.add('artist-card');\n    const bio = artist.strBiographyEN || '';\n    const firstSentence = bio.match(/^[^.!?]*[.!?]\\s*/)?.[0] || '';\n    const shortBio =\n      firstSentence.length > 140\n        ? firstSentence.slice(0, 140) + '…'\n        : firstSentence || 'No biography available.';\n    const artistGenres =\n      Array.isArray(artist.genres) && artist.genres.length > 0\n        ? artist.genres\n        : [];\n    const genresHtml = artistGenres\n      .map(genre => `<span class=\"genre\">${genre}</span>`)\n      .join(' ');\n    const artistId = artist._id || artist.idArtist || artist.id;\n    card.innerHTML = `\n      <img class=\"artists-img\" src=\"${\n        artist.strArtistThumb ||\n        artist.image ||\n        'https://via.placeholder.com/200x200?text=No+Image'\n      }\" alt=\"${artist.strArtist || 'Artist image'}\">\n      <p class=\"artist-genres\">\n        ${genresHtml || 'No genres'}\n      </p>\n      <h3 class=\"artist-name\">${artist.strArtist || 'Unknown Artist'}</h3>\n      <p class=\"artist-description\">${shortBio}</p>\n      <a href=\"#\" class=\"learn-more-btn js-learn-more-btn\" data-id=\"${artistId}\">\n  Learn More\n  <svg class=\"learn-icon\" width=\"24\" height=\"24\">\n    <use href=\"./img/sprite.svg#icon-caret-right\"></use>\n  </svg>\n</a>\n    `;\n\n    fragment.appendChild(card);\n  });\n  if (artistsList) {\n    artistsList.appendChild(fragment);\n  }\n  addLearnMoreButtonListeners();\n}\n// =================================================================\n// 4. Event Handlers\n// =================================================================\n/**\n * Handles clicks on the \"Load More\" button.\n */\nloadMoreBtn.addEventListener('click', () => {\n  loadMoreBtn.blur();\n  if (buffer.length >= limit) {\n    renderFromBuffer();\n  } else if (!isFetching) {\n    currentPage++;\n    fetchArtists(currentPage);\n  }\n});\n/**\n * Shows the global loader.\n */\nfunction showGlobalLoader() {\n  if (globalLoader) {\n    globalLoader.classList.add('is-active');\n    globalLoader.style.display = 'block';\n  }\n}\n/**\n * Hides the global loader.\n */\nfunction hideGlobalLoader() {\n  if (globalLoader) {\n    globalLoader.classList.remove('is-active');\n    globalLoader.style.display = 'none';\n  }\n}\n/**\n * Attaches click handlers to all \"Learn More\" buttons that don't already have a listener.\n */\nfunction addLearnMoreButtonListeners() {\n  const learnMoreBtns = document.querySelectorAll('.js-learn-more-btn');\n  learnMoreBtns.forEach(button => {\n    if (!button.dataset.listenerAttached) {\n      button.addEventListener('click', onLearnMoreBtnClick);\n      button.dataset.listenerAttached = 'true';\n    }\n  });\n}\n/**\n * Handles clicks on the \"Learn More\" button, and opens the modal.\n * It attempts to pass a cached artist object with genres if available.\n * @param {Event} event - The click event object.\n */\nasync function onLearnMoreBtnClick(event) {\n  const artistId = event.currentTarget.dataset.id;\n  if (!artistId) {\n    console.warn('Artist ID not found for modal. Cannot open modal.');\n    return;\n  }\n  // Attempt to retrieve the full artist object from the cache\n  const cachedArtist = artistsCache.get(artistId);\n  try {\n    // Pass the cached artist object if found, otherwise just the ID\n    // The openArtistModal function in modal-artists.js will handle fetching\n    // details if a full object isn't provided.\n    await openArtistModal(cachedArtist || artistId);\n  } catch (error) {\n    console.error('Error opening artist modal:', error);\n    // Optionally, display an error message to the user\n  }\n}\n// =================================================================\n// 5. Initial Load\n// =================================================================\ndocument.addEventListener('DOMContentLoaded', () => {\n  fetchArtists(currentPage);\n});\n","import Swiper from 'swiper/bundle';\nimport 'swiper/css/bundle';\nimport 'css-star-rating/css/star-rating.css';\nimport { fetchFeedbacks } from './apiService';\nconst swiperWrapper = document.querySelector('.swiper-wrapper');\nasync function loadFeedbacks() {\n  try {\n    const response = await fetchFeedbacks(10, 1);\n    const feedbacks = response.data;\n    feedbacks.forEach(({ rating, descr, name }) => {\n      const slide = createFeedbackSlide({ rating, text: descr, user: name });\n      swiperWrapper.appendChild(slide);\n    });\n    initSwiper();\n  } catch (error) {\n    console.error('Oops...Error', error);\n  }\n}\nloadFeedbacks();\nfunction createFeedbackSlide({ rating, text, user }) {\n  const slide = document.createElement('div');\n  slide.classList.add('swiper-slide');\n  const roundedRating = Math.round(rating);\n  slide.innerHTML = `\n    <div class=\"feedback-card\">\n      <div class=\"feedback-stars\">${renderStars(roundedRating)}</div>\n      <p class=\"feedback-text\">\"${text}\"</p>\n      <p class=\"feedback-user\">${user}</p>\n    </div>\n  `;\n  return slide;\n}\n\nfunction renderStars(count) {\n  const max = 5;\n  let starsHTML = '';\n  for (let i = 1; i <= max; i++) {\n    const starClass = i <= count ? 'star-filled' : 'star-outline';\n    starsHTML += `\n        <svg class=\"star-icon ${starClass}\" width=\"24\" height=\"24\">\n          <use href=\"./img/sprite.svg#icon-star\"></use>\n        </svg>\n      `;\n  }\n  return starsHTML;\n}\n\nfunction initSwiper() {\n  const swiper = new Swiper('.feedback-swiper', {\n    loop: false,\n\n    navigation: {\n      nextEl: '.feedback-button-next',\n      prevEl: '.feedback-button-prev',\n    },\n    pagination: {\n      el: '.feedback-pagination',\n      clickable: true,\n      type: 'custom',\n      renderCustom: function (swiper, current, total) {\n        const firstSlideIndex = 1;\n        const lastSlideIndex = total;\n\n        let leftBulletActive = '';\n        let middleBulletActive = '';\n        let rightBulletActive = '';\n\n        if (current === firstSlideIndex) {\n          leftBulletActive = 'swiper-pagination-bullet-active';\n        } else if (current === lastSlideIndex) {\n          rightBulletActive = 'swiper-pagination-bullet-active';\n        } else {\n          middleBulletActive = 'swiper-pagination-bullet-active';\n        }\n\n        return `\n          <span class=\"swiper-pagination-bullet ${leftBulletActive}\" data-slide-index=\"0\"></span>\n          <span class=\"swiper-pagination-bullet ${middleBulletActive}\" data-slide-index=\"${Math.floor(\n          total / 2\n        )}\"></span>\n          <span class=\"swiper-pagination-bullet ${rightBulletActive}\" data-slide-index=\"${\n          total - 1\n        }\"></span>\n        `;\n      },\n    },\n    on: {\n      paginationUpdate: function () {\n        const bullets = document.querySelectorAll(\n          '.feedback-pagination .swiper-pagination-bullet'\n        );\n        bullets.forEach(bullet => {\n          bullet.onclick = () => {\n            const index = parseInt(bullet.getAttribute('data-slide-index'));\n            swiper.slideTo(index);\n          };\n        });\n      },\n    },\n    grabCursor: true,\n  });\n}\n"],"names":["burger","modalMenu","closeBtn","backdrop","headerLogo","logoCloned","closeMenu","logoClone","e","link","API_BASE_URL","fetchArtists","limit","page","axios","error","fetchArtistDetails","artistId","fetchFeedbacks","artistModal","closeModalButton","modalLoader","modalArtistImage","modalTitle","artistInfoList","artistBioParagraph","readMoreBioBtn","genresList","artistAlbumsListContainer","artistAlbumsBlock","allAlbums","currentAlbumPage","albumsPerPage","clearModalContent","existingPaginationControls","toggleBiography","closeArtistModal","escapeKeyHandler","outsideClickHandler","renderAlbums","startIndex","endIndex","albumsToDisplay","album","albumItemHtml","track","index","rowClass","formatDuration","totalPages","paginationControls","prevButton","nextButton","pageInfo","ytButtons","btn","url","ms","numMs","totalSeconds","minutes","seconds","openArtistModal","artistData","el","fullArtistDetailsFromApi","artistIdToFetch","genresFromCache","genre","finalArtistDetails","formedYear","disbandedYear","yearsActive","biographyText","displayGenres","li","albumsMap","albumName","albumId","b","yearA","errorMessage","artistsList","loadMoreBtn","globalLoader","currentPage","buffer","isFetching","artistsCache","showGlobalLoader","data","fetchArtistsFromApi","artists","total","artist","renderFromBuffer","hideGlobalLoader","itemsToShow","fragment","card","firstSentence","_a","shortBio","genresHtml","addLearnMoreButtonListeners","button","onLearnMoreBtnClick","event","cachedArtist","swiperWrapper","loadFeedbacks","rating","descr","name","slide","createFeedbackSlide","initSwiper","text","user","roundedRating","renderStars","count","starsHTML","i","starClass","swiper","Swiper","current","lastSlideIndex","leftBulletActive","middleBulletActive","rightBulletActive","bullet"],"mappings":"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"}