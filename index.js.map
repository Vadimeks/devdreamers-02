{"version":3,"file":"index.js","sources":["../src/js/mobile-menu.js","../src/js/apiService.js","../src/js/modal-artists.js","../src/js/artists.js","../src/js/feedback.js"],"sourcesContent":["// Mobile menu\ndocument.addEventListener('DOMContentLoaded', function () {\n  const burger = document.querySelector('.burger-btn');\n  const modalMenu = document.querySelector('.mobile-menu');\n  const closeBtn = document.querySelector('.mobile-close');\n  const backdrop = document.querySelector('.mobile-backdrop');\n  const headerLogo = document.querySelector('.header-logo-link');\n\n  let logoCloned = false;\n\n  const closeMenu = () => {\n    backdrop.classList.remove('open');\n    modalMenu.classList.remove('open');\n    document.body.style.overflow = '';\n  };\n\n  burger.addEventListener('click', () => {\n    backdrop.classList.add('open');\n    modalMenu.classList.add('open');\n    document.body.style.overflow = 'hidden';\n\n    if (!logoCloned && headerLogo) {\n      const logoClone = headerLogo.cloneNode(true);\n      logoClone.classList.add('mobile-logo');\n      modalMenu.prepend(logoClone);\n      logoCloned = true;\n    }\n  });\n\n  closeBtn.addEventListener('click', closeMenu);\n\n  backdrop.addEventListener('click', e => {\n    if (e.target === backdrop) closeMenu();\n  });\n\n  const mobileLinks = modalMenu.querySelectorAll('a');\n  mobileLinks.forEach(link => {\n    link.addEventListener('click', closeMenu);\n  });\n\n  const mediaQuery = window.matchMedia('(min-width: 768px)');\n\n  const handleMediaQueryChange = e => {\n    if (e.matches) {\n      if (backdrop.classList.contains('open')) {\n        closeMenu();\n      }\n    }\n  };\n\n  mediaQuery.addEventListener('change', handleMediaQueryChange);\n\n  handleMediaQueryChange(mediaQuery);\n});\n","// Backend - get info through apiService.js\nimport axios from 'axios';\nconst API_BASE_URL = 'https://sound-wave.b.goit.study/api';\n/**\n * Fetches a list of genres.\n * @returns {Promise<Array>} A promise that resolves to an array of genre objects.\n */\nexport async function fetchGenres() {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/genres`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching genre list:', error);\n    throw error;\n  }\n}\n/**\n * Fetches a list of artists with pagination.\n * @param {number} limit The number of artists to fetch per page.\n * @param {number} page The page number to fetch.\n * @returns {Promise<Object>} A promise that resolves to an object containing artists, totalArtists, page, and limit.\n */\nexport async function fetchArtists(limit = 10, page = 1) {\n  // <-- ГЭТА ФУНКЦЫЯ ПАВІННА БЫЦЬ ТУТ БЕЗ ЗМЕН\n  try {\n    const response = await axios.get(`${API_BASE_URL}/artists`, {\n      params: { limit, page },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching artist list:', error);\n    throw error;\n  }\n}\n/**\n * Fetches artist information and their albums by ID.\n * @param {string} artistId The ID of the artist.\n * @returns {Promise<Object>} A promise that resolves to an object containing artist details and albums.\n */\nexport async function fetchArtistDetailsWithAlbums(artistId) {\n  try {\n    const response = await axios.get(\n      `${API_BASE_URL}/artists/${artistId}/albums`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\n      `Error fetching artist details with albums (ID: ${artistId}):`,\n      error\n    );\n    throw error;\n  }\n}\n/**\n * Fetches comprehensive artist details, including tracks, by ID.\n * This is the primary function for fetching all artist-related data for the modal.\n * @param {string} artistId The ID of the artist.\n * @returns {Promise<Object>} A promise that resolves to an object containing artist details and tracksList.\n */\nexport async function fetchArtistDetails(artistId) {\n  // <-- ГЭТА ПЕРАЙМЕНАВАНАЯ ФУНКЦЫЯ\n  try {\n    const response = await axios.get(`${API_BASE_URL}/artists/${artistId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching artist details (ID: ${artistId}):`, error);\n    throw error;\n  }\n}\n/**\n * Submits a new feedback.\n * @param {Object} feedbackData - Object containing feedback data.\n * @param {string} feedbackData.name - User's name.\n * @param {number} feedbackData.rating - Rating (e.g., from 1 to 5).\n * @param {string} feedbackData.descr - Description/comment.\n * @returns {Promise<Object>} A promise that resolves to an object with a processing message.\n */\nexport async function submitFeedback(feedbackData) {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/feedbacks`,\n      feedbackData\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error submitting feedback:', error);\n    throw error;\n  }\n}\n/**\n * Fetches a list of feedbacks with pagination.\n * @param {number} limit - The number of feedbacks per page.\n * @param {number} page - The page number.\n * @returns {Promise<Object>} A promise that resolves to an object containing an array of feedbacks, total count, and pagination info.\n */\nexport async function fetchFeedbacks(limit = 10, page = 1) {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/feedbacks`, {\n      params: { limit, page },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching feedback list:', error);\n    throw error;\n  }\n}\n/**\n * Registers a new user.\n * @param {Object} userData - User registration data.\n * @param {string} userData.email - User's email address.\n * @param {string} userData.password - User's password.\n * @returns {Promise<Object>} A promise that resolves to an object with an API key.\n */\nexport async function registerUser(userData) {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/register`, userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n}\n/**\n * Logs in a user.\n * @param {Object} credentials - User login credentials.\n * @param {string} credentials.email - User's email address.\n * @param {string} credentials.password - User's password.\n * @returns {Promise<Object>} A promise that resolves to an object with an API key.\n */\nexport async function loginUser(credentials) {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login`, credentials);\n    return response.data;\n  } catch (error) {\n    console.error('Error logging in user:', error);\n    throw error;\n  }\n}\n","import { fetchArtistDetails } from './apiService.js';\n\nconst artistModal = document.getElementById('artistModal');\nconst closeModalButton = artistModal?.querySelector('.close-modal');\nconst modalLoader = document.getElementById('modalLoader');\nconst modalContent = artistModal?.querySelector('.modal-content');\n\nconst modalArtistImage = artistModal?.querySelector('#modal-artist-image');\nconst modalTitle = artistModal?.querySelector('.modal-title');\n\nconst artistInfoList = artistModal?.querySelector('.artist-info-list');\nconst artistBioParagraph = artistModal?.querySelector('.artist-info-bio-text');\nconst readMoreBioBtn = artistModal?.querySelector('#read-more-bio-btn');\nconst genresList = artistModal?.querySelector('.genres-list');\nconst artistAlbumsListContainer = artistModal?.querySelector(\n  '.artist-albums-list'\n);\nconst artistAlbumsBlock = artistModal?.querySelector('.artist-albums-block');\n\nconst BASE_PUBLIC_URL = '/script-ninjas-project';\n\nlet allAlbums = [];\nlet scrollPosition = 0;\n\nfunction clearModalContent() {\n  if (modalTitle) modalTitle.textContent = '';\n  if (modalArtistImage) {\n    modalArtistImage.src = '';\n    modalArtistImage.alt = 'Artist Photo';\n  }\n  if (artistInfoList) artistInfoList.innerHTML = '';\n  if (artistBioParagraph) artistBioParagraph.innerHTML = '';\n  if (genresList) genresList.innerHTML = '';\n  if (artistAlbumsListContainer) artistAlbumsListContainer.innerHTML = '';\n\n  const existingPaginationControls = artistModal?.querySelector(\n    '.pagination-controls'\n  );\n  if (existingPaginationControls) {\n    existingPaginationControls.remove();\n  }\n\n  if (readMoreBioBtn) {\n    readMoreBioBtn.style.display = 'none';\n    readMoreBioBtn.textContent = 'Read More';\n    if (artistBioParagraph) artistBioParagraph.classList.remove('expanded');\n    readMoreBioBtn.removeEventListener('click', toggleBiography);\n  }\n\n  allAlbums = [];\n}\n\nfunction closeArtistModal() {\n  if (artistModal) {\n    artistModal.classList.remove('open');\n  }\n  if (document.body) {\n    document.body.classList.remove('modal-open');\n    document.body.style.top = '';\n    window.scrollTo(0, scrollPosition);\n  }\n  if (modalLoader) modalLoader.style.display = 'none';\n  if (modalContent) {\n    modalContent.style.opacity = '0';\n    modalContent.style.visibility = 'hidden';\n  }\n\n  clearModalContent();\n  document.removeEventListener('keydown', escapeKeyHandler);\n  artistModal?.removeEventListener('click', outsideClickHandler);\n}\n\nfunction outsideClickHandler(e) {\n  if (e.target === artistModal) {\n    closeArtistModal();\n  }\n}\n\nfunction escapeKeyHandler(e) {\n  if (e.key === 'Escape') {\n    closeArtistModal();\n  }\n}\n\nconst isValidYoutubeUrl = url => {\n  if (!url || typeof url !== 'string' || url.trim() === '') {\n    return false;\n  }\n\n  const youtubeRegex =\n    /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\/(watch\\?v=|embed\\/|v\\/|)([\\w-]{11})(.*)?$/;\n  return youtubeRegex.test(url.trim());\n};\n\nfunction renderAlbumsContent() {\n  if (!artistAlbumsListContainer) return;\n\n  artistAlbumsListContainer.innerHTML = '';\n\n  if (allAlbums.length === 0) {\n    artistAlbumsListContainer.innerHTML = `<li class=\"artist-albums-item\"><p>No album information available.</p></li>`;\n    return;\n  }\n\n  allAlbums.forEach(album => {\n    const albumTitle =\n      album.strAlbum && String(album.strAlbum).trim() !== ''\n        ? album.strAlbum\n        : 'Album Title';\n    const albumYear =\n      album.intYearReleased &&\n      String(album.intYearReleased).trim() !== '' &&\n      album.intYearReleased !== '0000' &&\n      album.intYearReleased !== null\n        ? ` (${album.intYearReleased})`\n        : '';\n\n    let albumItemHtml = `<li class=\"artist-albums-item\">\n                            <h3>${albumTitle}${albumYear}</h3>\n                            <ul class=\"album-track-list\">`;\n\n    albumItemHtml += `<li class=\"album-track-item track-header\">\n                        <ul class=\"track-info-list\">\n                          <li class=\"track-info-item\">Track</li>\n                          <li class=\"track-info-item track-info-item-time\">Time</li>\n                          <li class=\"track-info-item track-info-item-link\">Link</li>\n                        </ul>\n                      </li>`;\n\n    if (album.tracks && album.tracks.length > 0) {\n      album.tracks.forEach((track, index) => {\n        const trackDuration = track.intDuration\n          ? formatDuration(track.intDuration)\n          : '';\n\n        const musicVidUrl = track.movie;\n        const youtubeUrlIsValid = isValidYoutubeUrl(musicVidUrl);\n\n        const youtubeLinkHtml = youtubeUrlIsValid\n          ? `<button class=\"yt-button\" data-url=\"${musicVidUrl}\" aria-label=\"Watch on YouTube\">\n                <svg class=\"yt-icon\" width=\"20\" height=\"14\">\n                    <use href=\"${BASE_PUBLIC_URL}/img/sprite.svg#icon-youtube-modal\"></use>\n                </svg>\n            </button>`\n          : '';\n\n        const trackName =\n          track.strTrack && String(track.strTrack).trim() !== ''\n            ? track.strTrack\n            : 'Track Name';\n\n        albumItemHtml += `<li class=\"album-track-item\">\n                            <ul class=\"track-info-list\">\n                              <li class=\"track-info-item\">${trackName}</li>\n                              <li class=\"track-info-item track-info-item-time\">${trackDuration}</li>\n                              <li class=\"track-info-item track-info-item-link\">${youtubeLinkHtml}</li>\n                            </ul>\n                          </li>`;\n      });\n    } else {\n      albumItemHtml += `<li class=\"album-track-item\"><p>No tracks available for this album.</p></li>`;\n    }\n    albumItemHtml += `</ul></li>`;\n    artistAlbumsListContainer.insertAdjacentHTML('beforeend', albumItemHtml);\n  });\n\n  const ytButtons = artistAlbumsListContainer?.querySelectorAll('.yt-button');\n  ytButtons?.forEach(btn => {\n    btn.addEventListener('click', function (e) {\n      const url = e.currentTarget.dataset.url;\n      if (url) {\n        window.open(url, '_blank');\n      }\n    });\n  });\n}\n\nfunction formatDuration(ms) {\n  const numMs = typeof ms === 'string' ? parseInt(ms, 10) : ms;\n\n  if (typeof numMs !== 'number' || isNaN(numMs) || numMs <= 0) {\n    return '';\n  }\n  const totalSeconds = Math.floor(numMs / 1000);\n  const minutes = Math.floor(totalSeconds / 60);\n  const seconds = totalSeconds % 60;\n  return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n}\n\nfunction toggleBiography() {\n  if (artistBioParagraph && readMoreBioBtn) {\n    artistBioParagraph.classList.toggle('expanded');\n    readMoreBioBtn.textContent = artistBioParagraph.classList.contains(\n      'expanded'\n    )\n      ? 'Read Less'\n      : 'Read More';\n  }\n}\n\nexport async function openArtistModal(artistData) {\n  const requiredElements = [\n    artistModal,\n    modalLoader,\n    modalContent,\n    modalTitle,\n    modalArtistImage,\n    artistInfoList,\n    artistBioParagraph,\n    genresList,\n    artistAlbumsListContainer,\n  ];\n  if (requiredElements.some(el => !el)) {\n    console.error('Missing modal DOM elements.');\n    return;\n  }\n\n  scrollPosition = window.scrollY;\n  document.body.style.top = `-${scrollPosition}px`;\n  document.body.classList.add('modal-open');\n  artistModal.classList.add('open');\n\n  clearModalContent();\n  modalLoader.style.display = 'flex';\n  modalContent.style.opacity = '0';\n  modalContent.style.visibility = 'hidden';\n\n  document.addEventListener('keydown', escapeKeyHandler);\n  artistModal?.addEventListener('click', outsideClickHandler);\n  closeModalButton?.addEventListener('click', closeArtistModal);\n\n  let fullArtistDetailsFromApi;\n  let artistIdToFetch;\n  let genresFromCache = [];\n\n  if (typeof artistData === 'object' && artistData !== null) {\n    artistIdToFetch = artistData._id;\n    if (Array.isArray(artistData.genres) && artistData.genres.length > 0) {\n      genresFromCache = artistData.genres;\n    } else if (\n      typeof artistData.strGenre === 'string' &&\n      String(artistData.strGenre).trim() !== ''\n    ) {\n      genresFromCache = artistData.strGenre\n        .split(';')\n        .map(genre => genre.trim())\n        .filter(genre => genre !== '');\n    }\n  } else {\n    artistIdToFetch = artistData;\n  }\n\n  if (!artistIdToFetch) {\n    console.error('Artist ID missing.');\n    modalLoader.style.display = 'none';\n    if (modalTitle) modalTitle.textContent = 'Error: Artist ID missing';\n    if (modalContent) {\n      modalContent.style.opacity = '1';\n      modalContent.style.visibility = 'visible';\n    }\n    return;\n  }\n\n  try {\n    fullArtistDetailsFromApi = await fetchArtistDetails(artistIdToFetch);\n\n    const finalArtistDetails = { ...fullArtistDetailsFromApi };\n\n    if (genresFromCache.length > 0) {\n      finalArtistDetails.genres = genresFromCache;\n    } else {\n      finalArtistDetails.genres = [];\n    }\n\n    if (finalArtistDetails) {\n      modalTitle.textContent =\n        finalArtistDetails.strArtist &&\n        String(finalArtistDetails.strArtist).trim() !== ''\n          ? finalArtistDetails.strArtist\n          : '';\n\n      modalArtistImage.src =\n        finalArtistDetails.strArtistFanart ||\n        finalArtistDetails.strArtistThumb ||\n        finalArtistDetails.image ||\n        '';\n      modalArtistImage.alt = finalArtistDetails.strArtist || 'Artist Photo';\n\n      if (artistInfoList) {\n        const formedYear = finalArtistDetails.intFormedYear;\n        const disbandedYear = finalArtistDetails.intDiedYear;\n\n        let yearsActive = '';\n        if (\n          formedYear &&\n          String(formedYear).trim() !== '' &&\n          formedYear !== '0000' &&\n          formedYear !== null\n        ) {\n          if (\n            disbandedYear &&\n            String(disbandedYear).trim() !== '' &&\n            disbandedYear !== '0000' &&\n            disbandedYear !== 'Present' &&\n            disbandedYear !== null\n          ) {\n            yearsActive = `${formedYear} - ${disbandedYear}`;\n          } else {\n            yearsActive = `${formedYear} - present`;\n          }\n        }\n\n        const gender =\n          finalArtistDetails.strGender &&\n          String(finalArtistDetails.strGender).trim() !== '' &&\n          String(finalArtistDetails.strGender).trim().toLowerCase() !== 'null'\n            ? finalArtistDetails.strGender\n            : '';\n        const members =\n          finalArtistDetails.intMembers &&\n          String(finalArtistDetails.intMembers).trim() !== '' &&\n          finalArtistDetails.intMembers !== '0' &&\n          finalArtistDetails.intMembers !== null\n            ? finalArtistDetails.intMembers\n            : '';\n        const country =\n          finalArtistDetails.strCountry &&\n          String(finalArtistDetails.strCountry).trim() !== '' &&\n          String(finalArtistDetails.strCountry).trim().toLowerCase() !== 'null'\n            ? finalArtistDetails.strCountry\n            : '';\n\n        artistInfoList.innerHTML = `\n          <li class=\"artist-info-item\">\n            <h3>Years Active</h3>\n            <p class=\"artist-info\">${yearsActive}</p>\n          </li>\n          <li class=\"artist-info-item\">\n            <h3>Gender</h3>\n            <p class=\"artist-info\">${gender}</p>\n          </li>\n          <li class=\"artist-info-item\">\n            <h3>Members</h3>\n            <p class=\"artist-info\">${members}</p>\n          </li>\n          <li class=\"artist-info-item\">\n            <h3>Country</h3>\n            <p class=\"artist-info\">${country}</p>\n          </li>\n        `;\n      }\n\n      if (artistBioParagraph) {\n        const biographyText =\n          finalArtistDetails.strBiographyEN &&\n          String(finalArtistDetails.strBiographyEN).trim() !== '' &&\n          String(finalArtistDetails.strBiographyEN).trim().toLowerCase() !==\n            'null'\n            ? finalArtistDetails.strBiographyEN\n            : 'Biography unavailable.';\n        artistBioParagraph.textContent = biographyText;\n\n        if (biographyText.length > 300) {\n          artistBioParagraph.classList.add('collapsed');\n          if (readMoreBioBtn) {\n            readMoreBioBtn.style.display = 'block';\n            readMoreBioBtn.textContent = 'Read More';\n            readMoreBioBtn.addEventListener('click', toggleBiography);\n          }\n        } else {\n          artistBioParagraph.classList.remove('collapsed');\n          if (readMoreBioBtn) {\n            readMoreBioBtn.style.display = 'none';\n            readMoreBioBtn.removeEventListener('click', toggleBiography);\n          }\n        }\n      }\n\n      if (genresList) {\n        genresList.innerHTML = '';\n        let displayGenres = finalArtistDetails.genres || [];\n\n        if (displayGenres.length > 0) {\n          displayGenres.forEach(genre => {\n            if (\n              genre &&\n              String(genre).trim() !== '' &&\n              String(genre).trim().toLowerCase() !== 'null'\n            ) {\n              const li = document.createElement('li');\n              li.className = 'genres-item';\n              li.textContent = genre;\n              genresList.appendChild(li);\n            }\n          });\n        }\n        if (genresList.children.length === 0) {\n          const li = document.createElement('li');\n          li.className = 'genres-item';\n          li.textContent = 'Genres unavailable';\n          genresList.appendChild(li);\n        }\n      }\n\n      if (\n        finalArtistDetails.tracksList &&\n        finalArtistDetails.tracksList.length > 0\n      ) {\n        const albumsMap = new Map();\n        finalArtistDetails.tracksList.forEach(track => {\n          const albumName = track.strAlbum || 'Unknown Album';\n          const albumId = track.idAlbum || albumName;\n\n          if (!albumsMap.has(albumId)) {\n            albumsMap.set(albumId, {\n              strAlbum: albumName,\n              intYearReleased: track.intYearReleased || '',\n              idAlbum: albumId,\n              tracks: [],\n            });\n          }\n          albumsMap.get(albumId).tracks.push(track);\n        });\n\n        allAlbums = Array.from(albumsMap.values()).sort((a, b) => {\n          const yearA = parseInt(a.intYearReleased) || 0;\n          const yearB = parseInt(b.intYearReleased) || 0;\n          return yearB - yearA;\n        });\n\n        renderAlbumsContent();\n      } else {\n        if (artistAlbumsListContainer) {\n          artistAlbumsListContainer.innerHTML = `<li class=\"artist-albums-item\"><p>Album and track information unavailable.</p></li>`;\n        }\n      }\n    } else {\n      if (modalTitle) modalTitle.textContent = 'Artist Not Found';\n      if (artistInfoList)\n        artistInfoList.innerHTML =\n          '<li class=\"artist-info-item\"><p>Could not retrieve artist details.</p></li>';\n      if (artistBioParagraph) artistBioParagraph.innerHTML = '';\n      if (genresList) genresList.innerHTML = '';\n      if (artistAlbumsListContainer) artistAlbumsListContainer.innerHTML = '';\n    }\n\n    modalLoader.style.display = 'none';\n    modalContent.style.opacity = '1';\n    modalContent.style.visibility = 'visible';\n  } catch (error) {\n    console.error('Error loading data:', error);\n    modalLoader.style.display = 'none';\n    if (modalContent) {\n      modalContent.style.opacity = '1';\n      modalContent.style.visibility = 'visible';\n    }\n\n    if (artistModal) {\n      if (modalTitle) modalTitle.textContent = 'Error loading data!';\n      let errorMessage = 'Unfortunately, artist data could not be loaded. ';\n      if (error.response) {\n        errorMessage += `Status: ${error.response.status}. `;\n        if (error.response.status === 404) {\n          errorMessage += 'Resource not found or API path incorrect.';\n        } else if (error.response.data && error.response.data.message) {\n          errorMessage += `Message: ${error.response.data.message}`;\n        }\n      } else if (error.request) {\n        errorMessage += 'No response from server. Network issue.';\n      } else {\n        errorMessage += `Message: ${error.message}`;\n      }\n\n      if (artistInfoList)\n        artistInfoList.innerHTML = `<li class=\"artist-info-item\"><p class=\"error\">${errorMessage}</p></li>`;\n      if (artistBioParagraph) artistBioParagraph.innerHTML = '';\n      if (genresList) genresList.innerHTML = '';\n      if (artistAlbumsListContainer) artistAlbumsListContainer.innerHTML = '';\n    }\n  }\n}\n","import { fetchArtists as fetchArtistsFromApi } from './apiService.js';\nimport { openArtistModal } from './modal-artists.js';\n\n// DOM Element Caching\nconst artistsList = document.getElementById('artists-list');\nconst loadMoreBtn = document.getElementById('load-more');\nconst globalLoader = document.getElementById('global-loader');\n\n// State Variables\nlet currentPage = 1;\nconst limit = 8;\nlet buffer = [];\nlet isFetching = false;\nlet artistsCache = new Map();\n\n/**\n * Asynchronously fetches a list of artists.\n * @param {number} page - The page number to load.\n */\nasync function fetchArtists(page = 1) {\n  showGlobalLoader();\n  isFetching = true;\n  try {\n    const data = await fetchArtistsFromApi(limit, page);\n    const artists = data.artists || [];\n    const total = data.totalArtists || 0;\n\n    artists.forEach(artist => {\n      buffer.push(artist);\n      const artistId = artist._id || artist.idArtist || artist.id;\n      if (artistId) {\n        artistsCache.set(artistId, artist);\n      }\n    });\n\n    renderFromBuffer();\n    const shownCount = document.querySelectorAll('.artist-card').length;\n    if (shownCount >= total && buffer.length === 0) {\n      loadMoreBtn.classList.add('hidden');\n    } else {\n      loadMoreBtn.classList.remove('hidden');\n    }\n  } catch (error) {\n    console.error('Error fetching artists:', error);\n    if (artistsList) {\n      artistsList.innerHTML =\n        '<li class=\"artist-card\"><p>Failed to load artists. Please try again later.</p></li>';\n    }\n    if (loadMoreBtn) {\n      loadMoreBtn.classList.add('hidden');\n    }\n  } finally {\n    hideGlobalLoader();\n    isFetching = false;\n  }\n}\n\n/**\n * Renders artist cards from the buffer into the DOM.\n */\nfunction renderFromBuffer() {\n  const itemsToShow = buffer.splice(0, limit);\n  const fragment = document.createDocumentFragment();\n  itemsToShow.forEach(artist => {\n    const card = document.createElement('li');\n    card.classList.add('artist-card');\n    const bio = artist.strBiographyEN || '';\n    const firstSentence = bio.match(/^[^.!?]*[.!?]\\s*/)?.[0] || '';\n    const shortBio =\n      firstSentence.length > 140\n        ? firstSentence.slice(0, 140) + '…'\n        : firstSentence || 'No biography available.';\n    const artistGenres =\n      Array.isArray(artist.genres) && artist.genres.length > 0\n        ? artist.genres\n        : [];\n    const genresHtml = artistGenres\n      .map(genre => `<span class=\"genre\">${genre}</span>`)\n      .join(' ');\n    const artistId = artist._id || artist.idArtist || artist.id;\n    card.innerHTML = `\n      <div class=\"artists-image\"><img class=\"artists-img\" src=\"${\n        artist.strArtistThumb ||\n        artist.image ||\n        'https://via.placeholder.com/200x200?text=No+Image'\n      }\" alt=\"${artist.strArtist || 'Artist image'}\"></div>\n      <p class=\"artist-genres\">\n        ${genresHtml || 'No genres'}\n      </p>\n      <h3 class=\"artist-name\">${artist.strArtist || 'Unknown Artist'}</h3>\n      <p class=\"artist-description\">${shortBio}</p>\n\n      <button class=\"learn-more-btn js-learn-more-btn\"\n              data-id=\"${artistId}\">Learn More\n        <svg class=\"load-icon\" width=\"24\" height=\"24\"><use href=\"./img/sprite.svg#icon-caret-right\"></use></svg>\n      </button>\n\n    `;\n\n    fragment.appendChild(card);\n  });\n  if (artistsList) {\n    artistsList.appendChild(fragment);\n  }\n  addLearnMoreButtonListeners();\n}\n\n/**\n * Handles clicks on the \"Load More\" button.\n */\nloadMoreBtn.addEventListener('click', () => {\n  loadMoreBtn.blur();\n  if (buffer.length >= limit) {\n    renderFromBuffer();\n  } else if (!isFetching) {\n    currentPage++;\n    fetchArtists(currentPage);\n  }\n});\n\n/**\n * Shows the global loader.\n */\nfunction showGlobalLoader() {\n  if (globalLoader) {\n    globalLoader.classList.add('is-active');\n    globalLoader.style.display = 'block';\n  }\n}\n\n/**\n * Hides the global loader.\n */\nfunction hideGlobalLoader() {\n  if (globalLoader) {\n    globalLoader.classList.remove('is-active');\n    globalLoader.style.display = 'none';\n  }\n}\n\n/**\n * Attaches click handlers to all \"Learn More\" buttons that don't already have a listener.\n */\nfunction addLearnMoreButtonListeners() {\n  const learnMoreBtns = document.querySelectorAll('.js-learn-more-btn');\n  learnMoreBtns.forEach(button => {\n    if (!button.dataset.listenerAttached) {\n      button.addEventListener('click', onLearnMoreBtnClick);\n      button.dataset.listenerAttached = 'true';\n    }\n  });\n}\n\n/**\n * Handles clicks on the \"Learn More\" button, and opens the modal.\n * @param {Event} event - The click event object.\n */\nasync function onLearnMoreBtnClick(event) {\n  const artistId = event.currentTarget.dataset.id;\n  if (!artistId) {\n    console.warn('Artist ID not found for modal. Cannot open modal.');\n    return;\n  }\n  const cachedArtist = artistsCache.get(artistId);\n  try {\n    await openArtistModal(cachedArtist || artistId);\n  } catch (error) {\n    console.error('Error opening artist modal:', error);\n  }\n}\n\n// Initial Load\ndocument.addEventListener('DOMContentLoaded', () => {\n  fetchArtists(currentPage);\n});\n","// feedback section js\nimport Swiper from 'swiper/bundle';\nimport 'swiper/css/bundle';\n// import 'css-star-rating/css/star-rating.css';\n\nimport { fetchFeedbacks } from './apiService';\n\nconst swiperWrapper = document.querySelector('.swiper-wrapper');\n\nasync function loadFeedbacks() {\n  try {\n    const response = await fetchFeedbacks(10, 1);\n    const feedbacks = response.data;\n    if (feedbacks && feedbacks.length > 0) {\n      feedbacks.forEach(({ rating, descr, name }) => {\n        const slide = createFeedbackSlide({ rating, text: descr, user: name });\n        swiperWrapper.appendChild(slide);\n      });\n      initSwiper();\n    } else {\n      console.warn('No feedbacks received from the API.');\n    }\n  } catch (error) {\n    console.error('Oops...Error loading feedbacks:', error);\n  }\n}\n\nloadFeedbacks();\n\nfunction createFeedbackSlide({ rating, text, user }) {\n  const slide = document.createElement('div');\n  slide.classList.add('swiper-slide');\n  const roundedRating = Math.round(rating);\n  slide.innerHTML = `\n    <div class=\"feedback-card\">\n      <div class=\"feedback-stars\">${renderStars(roundedRating)}</div>\n      <p class=\"feedback-text\">\"${text}\"</p>\n      <p class=\"feedback-user\">${user}</p>\n    </div>\n  `;\n  return slide;\n}\n\nfunction renderStars(count) {\n  const max = 5;\n  let starsHTML = '';\n  for (let i = 1; i <= max; i++) {\n    const starClass = i <= count ? 'star-filled' : 'star-outline';\n    starsHTML += `\n        <svg class=\"star-icon ${starClass}\" width=\"24\" height=\"24\">\n          <use href=\"./img/sprite.svg#icon-star\"></use>\n        </svg>\n      `;\n  }\n  return starsHTML;\n}\n\nfunction initSwiper() {\n  const swiper = new Swiper('.feedback-swiper', {\n    loop: false,\n\n    navigation: {\n      nextEl: '.feedback-button-next',\n      prevEl: '.feedback-button-prev',\n    },\n    pagination: {\n      el: '.feedback-pagination',\n      clickable: true,\n      type: 'custom',\n      renderCustom: function (swiperInstance, current, total) {\n        const leftBulletClass =\n          current === 1 ? 'swiper-pagination-bullet-active' : '';\n        const middleBulletClass =\n          current > 1 && current < total\n            ? 'swiper-pagination-bullet-active'\n            : '';\n        const rightBulletClass =\n          current === total ? 'swiper-pagination-bullet-active' : '';\n\n        return `\n          <span class=\"swiper-pagination-bullet ${leftBulletClass}\" data-slide-target=\"first-slide-go\"></span>\n          <span class=\"swiper-pagination-bullet ${middleBulletClass}\" data-slide-target=\"indicator-only\"></span>\n          <span class=\"swiper-pagination-bullet ${rightBulletClass}\" data-slide-target=\"last-slide-go\"></span>\n        `;\n      },\n    },\n    on: {\n      init: function () {\n        addPaginationClickHandlers(this);\n      },\n      paginationRender: function () {\n        addPaginationClickHandlers(this);\n      },\n    },\n    grabCursor: true,\n  });\n\n  function addPaginationClickHandlers(swiperInstance) {\n    const paginationContainer = document.querySelector('.feedback-pagination');\n    if (!paginationContainer) return;\n\n    paginationContainer.removeEventListener(\n      'click',\n      handleCustomPaginationClick\n    );\n    paginationContainer.addEventListener('click', handleCustomPaginationClick);\n\n    function handleCustomPaginationClick(event) {\n      const clickedBullet = event.target.closest('.swiper-pagination-bullet');\n      if (!clickedBullet) return;\n\n      const targetAction = clickedBullet.getAttribute('data-slide-target');\n      const totalSlides = swiperInstance.slides.length;\n\n      if (targetAction === 'first-slide-go') {\n        swiperInstance.slideTo(0);\n      } else if (targetAction === 'last-slide-go') {\n        swiperInstance.slideTo(totalSlides - 1);\n      } else if (targetAction === 'indicator-only') {\n        return;\n      }\n    }\n  }\n}\n"],"names":["burger","modalMenu","closeBtn","backdrop","headerLogo","logoCloned","closeMenu","logoClone","e","link","mediaQuery","handleMediaQueryChange","API_BASE_URL","fetchArtists","limit","page","axios","error","fetchArtistDetails","artistId","fetchFeedbacks","artistModal","closeModalButton","modalLoader","modalContent","modalArtistImage","modalTitle","artistInfoList","artistBioParagraph","readMoreBioBtn","genresList","artistAlbumsListContainer","BASE_PUBLIC_URL","allAlbums","scrollPosition","clearModalContent","existingPaginationControls","toggleBiography","closeArtistModal","escapeKeyHandler","outsideClickHandler","isValidYoutubeUrl","url","renderAlbumsContent","album","albumTitle","albumYear","albumItemHtml","track","index","trackDuration","formatDuration","musicVidUrl","youtubeLinkHtml","trackName","ytButtons","btn","ms","numMs","totalSeconds","minutes","seconds","openArtistModal","artistData","el","fullArtistDetailsFromApi","artistIdToFetch","genresFromCache","genre","finalArtistDetails","formedYear","disbandedYear","yearsActive","gender","members","country","biographyText","displayGenres","li","albumsMap","albumName","albumId","a","b","yearA","errorMessage","artistsList","loadMoreBtn","globalLoader","currentPage","buffer","isFetching","artistsCache","showGlobalLoader","data","fetchArtistsFromApi","artists","total","artist","renderFromBuffer","hideGlobalLoader","itemsToShow","fragment","card","firstSentence","_a","shortBio","genresHtml","addLearnMoreButtonListeners","button","onLearnMoreBtnClick","event","cachedArtist","swiperWrapper","loadFeedbacks","feedbacks","rating","descr","name","slide","createFeedbackSlide","initSwiper","text","user","roundedRating","renderStars","count","starsHTML","i","starClass","Swiper","swiperInstance","current","leftBulletClass","middleBulletClass","addPaginationClickHandlers","paginationContainer","handleCustomPaginationClick","clickedBullet","targetAction","totalSlides"],"mappings":"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"}